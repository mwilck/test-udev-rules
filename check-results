#! /bin/bash
set -E
trap 'trap - ERR; echo "$0: error in $BASH_COMMAND on line $LINENO" >&2; exit 1' ERR
trap 'trap - 0; eval "$CLEANUP"' INT TERM 0
CLEANUP=:
ME=$(basename "$0")

[[ $1 && -f "$1" ]]
DIR=$(basename "$1")
DIR=${DIR%.tar.gz}

[[ $DIR ]]
[[ -d "/tmp/$DIR" ]] || {
    tar xz -C /tmp -f "$1"
    CLEANUP='cd /; rm -rf /tmp/$DIR;'"$CLEANUP"
}
[[ -d "/tmp/$DIR" ]]
cd "/tmp/$DIR"

sort_links() {
    local a
    a=($(printf '%s\n' "$@" | sort))
    printf '%s\n' "${a[@]}"
}

check_dev() {
    local tst=$1 dev=$2 ref=$3 diffs dl1 dl2
    local FILTER
    [[ -f $tst/$dev ]] || echo '### NOT FOUND ###'
    # Filter out env vars that are always different and not relevant
    FILTER='\.SYSFS_PATH=|ID_SCSI=|USEC_INITIALIZED=|\.INQUIRY_DEV=|\.ID_BUS=|ID_SCSI_INQUIRY=|\.BSG_DEV=|TAGS='
    case "$ref" in
	# scsi_id sets no SCSI_* variables
	# sg3_utils don't set ID_SCSI_SERIAL
	# old sg3_utils ("before") doesn't handle tapes
	# ID_SCSI_DI/ID_SCSI_SN are used by current code but not necessary
	*-scsi-id|*-nosg3)
	    FILTER="$FILTER|^\+SCSI_|ID_SCSI_SERIAL=";;
	*-before)
	    FILTER="$FILTER|^\+ID_ATA_|^\+ID_USB_|-ID_SCSI_DI=|-ID_SCSI_SN="
	    case $(basename $dev) in
		st*|nst*|sch*|sg*)
		    FILTER="$FILTER|^\+SCSI_|ID_SCSI_SERIAL=";;
	    esac
	    ;;
    esac
    case "$tst" in
	*-scsi_id|*-nosg3)
	    FILTER="$FILTER|^-SCSI_|ID_SCSI_SERIAL=";;
    esac
    diffs=$(diff -u "$ref/$dev" "$tst/$dev" | \
		grep '^[-+][^-+]' | egrep -v "($FILTER)") || true
    [[ -n "$diffs" ]] || return 0
    # echo filter=$FILTER
    dl1=$(echo "$diffs" | sed -n s/-DEVLINKS=//p)
    dl2=$(echo "$diffs" | sed -n s/+DEVLINKS=//p)
    dl1=$(sort_links $dl1)
    dl2=$(sort_links $dl2)
    diffs=$(echo "$diffs" | sed /DEVLINKS/d)
    [[ -n "$diffs" || "$dl1" != "$dl2" ]] || return 0

    echo "
## ${dev%.txt} ($ref vs. $tst)
"
    if [[ -n "$diffs" ]]; then
	echo '### Properties: 
```'
	echo "$diffs"
	echo '```'
    fi
    if [[ "$dl1" != "$dl2" ]]; then
	echo "### Symlinks: 
"'```'
	diff -u <(echo "$dl1") <(echo "$dl2") | grep '^[-+][^-+]' || true
	echo '```'
    fi
}

TESTS=(00-before 01-sysfs 02-inquiry 03-scsi_id 04-nosg3 05-after)
DEVS=($(find 00-before -name '*.txt' | sed s,^00-before/,, | sort))

compare_with() {
    local ref=$1 tst dev
    shift

    for tst in $@; do
	case "$tst" in "$ref") continue;; esac
	echo "
BEGIN $ref vs. $tst"
	for dev in ${DEVS[@]}; do
	    check_dev "$tst" "$dev" "$ref"
	done
	echo "
END $ref vs. $tst"
    done
}

