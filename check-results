#! /bin/bash
set -E
trap 'trap - ERR; echo "$0: error in $BASH_COMMAND on line $LINENO" >&2; exit 1' ERR
trap 'trap - 0; eval "$CLEANUP"' INT TERM 0
CLEANUP=:
ME=$(basename "$0")

[[ $1 && -f "$1" ]]
DIR=$(basename "$1")
DIR=${DIR%.tar.gz}

[[ $DIR ]]
[[ -d "/tmp/$DIR" ]] || {
    tar xz -C /tmp -f "$1"
    CLEANUP='cd /; rm -rf /tmp/$DIR;'"$CLEANUP"
}
[[ -d "/tmp/$DIR" ]]
cd "/tmp/$DIR"

sort_links() {
    local a
    a=($(printf '%s\n' "$@" | sort))
    printf '%s\n' "${a[@]}"
}

check_dev() {
    local tst=$1 dev=$2 ref=$3 diffs dl1 dl2
    local FILTER
    [[ -f $tst/$dev ]] || echo '### NOT FOUND ###'
    # Filter out env vars that are always different and not relevant
    FILTER='\.SYSFS_PATH=|ID_SCSI=|USEC_INITIALIZED=|\.INQUIRY_DEV=|\.ID_BUS=|ID_SCSI_INQUIRY=|\.BSG_DEV=|TAGS='
    case "$ref" in
	# scsi_id sets no SCSI_* variables
	# sg3_utils don't set ID_SCSI_SERIAL
	# old sg3_utils ("before") doesn't handle tapes
	# ID_SCSI_DI/ID_SCSI_SN are used by current code but not necessary
	*-scsi-id|*-nosg3)
	    FILTER="$FILTER|^\+SCSI_|ID_SCSI_SERIAL=";;
	*-before)
	    FILTER="$FILTER|^\+ID_ATA_|^\+ID_USB_|-ID_SCSI_DI=|-ID_SCSI_SN="
	    [[ o"$DIST_SG3" = oyes ]] || FILTER="$FILTER|^\+SCSI_"
	    case $(basename $dev) in
		st*|nst*|sch*|sg*)
		    FILTER="$FILTER|^\+SCSI_|ID_SCSI_SERIAL=";;
	    esac
	    ;;
    esac
    case "$tst" in
	*-scsi_id|*-nosg3)
	    FILTER="$FILTER|^-SCSI_|ID_SCSI_SERIAL=";;
    esac
    diffs=$(diff -u "$ref/$dev" "$tst/$dev" | \
		grep '^[-+][^-+]' | egrep -v "($FILTER)") || true
    [[ -n "$diffs" ]] || return 0
    # echo filter=$FILTER
    dl1=$(echo "$diffs" | sed -n s/-DEVLINKS=//p)
    dl2=$(echo "$diffs" | sed -n s/+DEVLINKS=//p)
    dl1=$(sort_links $dl1)
    dl2=$(sort_links $dl2)
    diffs=$(echo "$diffs" | sed /DEVLINKS/d)
    [[ -n "$diffs" || "$dl1" != "$dl2" ]] || return 0

    echo "
## ${dev%.txt} ($ref vs. $tst)
"
    if [[ -n "$diffs" ]]; then
	echo '### Properties: 
```'
	echo "$diffs"
	echo '```'
    fi
    if [[ "$dl1" != "$dl2" ]]; then
	echo "### Symlinks: 
"'```'
	diff -u <(echo "$dl1") <(echo "$dl2") | grep '^[-+][^-+]' || true
	echo '```'
    fi
}

TESTS=(00-before 01-sysfs 02-inquiry 03-scsi_id 04-nosg3 05-after)
# skip rules.txt
DEVS=($(find 00-before -mindepth 2 -name '*.txt' | sed s,^00-before/,, | sort))

if [[ -f /usr/lib/udev/rules.d/55-scsi-sg3_id.rules || \
	  -f /lib/udev/rules.d/55-scsi-sg3_id.rules ]]; then
    DIST_SG3=yes
else
    DIST_SG3=
fi

compare_with() {
    local ref=$1 tst dev
    shift

    for tst in $@; do
	case "$tst" in "$ref") continue;; esac
	echo "
BEGIN $ref vs. $tst"
	for dev in ${DEVS[@]}; do
	    check_dev "$tst" "$dev" "$ref"
	done
	echo "
END $ref vs. $tst"
    done
}

echo "\
# SCSI UDEV RULE TEST RESULT SUMMARY

The following output compares results of different udev rule
sets from test run \"$DIR\". Each section lists differences
between two rule sets. A short preamble in each section explains
what differences are expected, and why. If you find additional
changes or differences, please report them to mwilck@suse.com.

Some known-to-be-negligible differences are filtered out in order
to make this output human readable. See code for FILTER in
$ME for details.

Some known 'compatibility' rules are disabled during the test,
because they would cause irritating 'false positives'.

## List of test scenarios

 - **00-before:** This is just the default system configuration.
 - **01-sysfs:** Uses the new rule set with 55-scsi-sg3_utils.rules,
   trying to read SCSI VPD pages from sysfs if possible.
 - **02-inquiry:** Similar to 01-sysfs, but without reading VPD pages
   from sysfs; sg_inq is called on the device nodes instead. The results
   should be almost identical to 01-sysfs.
 - **03-scsi_id:** Uses the new rule set with 55-scsi-sg3_utils.rules
   disabled, i.e. scsi_id based rules from 55-zz-scsi_id.rules
   are in effect.
 - **04-nosg3:** Uses the default system rule set with 55-scsi-sg3_utils.rules
   disabled, i.e. scsi_id based rules from 60-persistent-storage.rules
   are in effect. On systems that don't install 55-scsi-sg3_utils.rules
   by default (such as Fedora), this is identical to 00-before.
 - **05-after:** Exactly the same as 00-before. Used only to make sure no
   changes remain after the testing ends.
 - **06-sg3-only:** Uses the default system ruleset from systemd/udev with
   the updated `sg3_utils` ruleset. Simulates an update of `sg3_utils` only.
"

echo "
# BEFORE and AFTER test: Expect no differences

(Just to make sure we didn't break stuff)"
compare_with 00-before 05-after

echo "
# NEW sysfs vs. sg_inq: Expect very few differences

- differences only for devices with blacklisted VPDs (e.g. USB)
- for these sg_inq will provide some extra links and properties"
compare_with 01-sysfs 02-inquiry

echo "
# NEW sg3_utils vs. scsi_id: Expect some minor differences

- sg3_utils creates some additional SCSI symlinks (minor)
- sg3_utils sets ID_VENDOR (negiligible)
- scsi_id sets ID_WWN_VENDOR_EXTENSION (can be ignored)
- scsi_id doesn't support schX"
compare_with 01-sysfs 03-scsi_id

echo "
# OLD vs. NEW with sg3_utils: Expect some improvements

- ID_WWN is now shortened to 16 chars
- ID_TARGET_PORT is available
- medium changers are handled
- USB and ATA devices treated as such (not as SCSI), causing diffences
  for ID_MODEL and ID_REVISION"
compare_with 00-before 01-sysfs

echo "
# OLD vs. NEW with scsi_id: Expect a few improvements

(Expect almost no changes on Fedora/RHEL).

- ID_BUS added for some devices (medium changers)
- SCSI detection runs *after multipath detection* with \"OLD\" 04-nosg3
  (except on Fedora/RHEL). This may cause multipath detection to fail
  (SYSTEMD_READY, DM_MULTIPATH_DEVICE_PATH), which may affect how the
  device is processed further (LVM etc.)"
compare_with 04-nosg3 03-scsi_id

echo "
# NEW udev+sg3 rules vs. NEW sg3 rules with OLD udev rules

Expect little changes.
"
compare_with 01-sysfs 06-sg3-only

echo "
# OLD udev+sg3 rules vs. NEW sg3 rules with OLD udev rules

Expect some improvements. On systems not using sg3_utils rules,
this comes down to scsi_id vs. sg3_utils!
"
compare_with 00-before 06-sg3-only

# The following test is pointless if sg3_utils wasn't used in the OS
[[ o"$DIST_SG3" = oyes ]] || exit 0

echo "
# !! TESTING OF PROPOSED PATCHES ENDS HERE !!

# OLD sg3_utils vs. scsi_id: Expect some differences

The is irrelevant for testing the patches, just informational,
to see the current state of affairs.

- some ATA/usb devices are treated as scsi with sg3_utils, causing
  differences for ID_VENDOR, ID_MODEL, etc.
- ID_WWN is 16 chars with scsi_id, but possibly more with sg3_utils
- differences in model string length (ata_id vs sg_inq)
- scsi_id rules are run *after* multipath rules (see
  \"OLD/NEW with scsi_id\" above), causing follow-up differences."
compare_with 00-before 04-nosg3

## Here come "full comparisons"
## But the stuff above is more intuitive and covers everything

#compare_with 00-before 01-sysfs 02-inquiry 03-scsi_id 04-nosg3 05-after
#compare_with 04-nosg3 01-sysfs 02-inquiry 03-scsi_id
#compare_with 01-sysfs 02-inquiry 03-scsi_id
